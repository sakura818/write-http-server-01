package jp.co.topgate.sugawara.web;

import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.io.InputStreamReader;

/*
 * This Java source file was generated by the Gradle 'init' task.
 * HttpServer class
 * connectionを管理する
 *
 */
public class HttpServer {

    private static final int PORT = 8082;// Httpサーバでは一般的にポート番号として80番もしくは8080番を使用する
    private ServerSocket serverSocket = null;
    private Socket socket = null;
    private String request;

    public String getRequest() {
        return this.request;
    }


    public void connection() throws IOException {
        System.out.println("start up http server http://localhost:" + this.PORT);
        try (ServerSocket serverSocket = new ServerSocket(this.PORT)) {

            while (true) {

                this.socket = serverSocket.accept();
                System.out.println("request incoming");

                /**
                 * Requestの処理
                 * クライアントとの入出力の時点ではバイト列として扱い、内部処理ではStringに変換して操作する
                 *
                 */
                System.out.println("request...");
                InputStream is = this.socket.getInputStream();
                BufferedInputStream bis = new BufferedInputStream(is);
                BufferedReader br = new BufferedReader(new InputStreamReader(bis));
                String request;
                while (!(request = br.readLine()).equals("")) {
                    System.out.println(request);
                }
                System.out.println("---------------------------------------");


                /**
                 * Responseの処理
                 * クライアントとの入出力の時点ではバイト列として扱い、内部処理ではStringに変換して操作する
                 *
                 */
                OutputStream outputStream = this.socket.getOutputStream();
                HttpResponse httpResponse = new HttpResponse();// HttpResponse.javaからメソッドを呼び出し

                httpResponse.httpResponseGenerate();
                // Stringをバイト列に変換するコード
                // BufferedOutputStream bos = new BufferedOutputStream();  // データをバッファリングしながらバイト列でもっていって
                // OutputStream os = this.socket.getOutputStream(bos);  // データを出力

            }
        } catch (IOException e) {
            System.out.println("正常にコネクションできないエラーが発生しました");
        } finally {
            this.socket.close();
            serverSocket.close();

        }
    }

}




