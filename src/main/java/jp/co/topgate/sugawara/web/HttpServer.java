package jp.co.topgate.sugawara.web;

import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;


/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class HttpServer {

    private static final int PORT = 8080;//privateは自分自身のクラスのみアクセスを許可する　staticは静的フィールド（フィールド変数の実体がクラスに準備される）
    ServerSocket serverSocket = null;
    Socket socket = null;

    public void socketStart() throws IOException {
        System.out.println("start up http server http://localhost:8080");
        try {
            Serversocket serverSocket = new ServerSocket(PORT);
            while (true) {
                this.httpserverConnect(serverSocket);
            }
        }catch (IOException e) {
            System.out.println("ソケットが作れないエラーが発生しました");
        }
    }


    public static void httpserverConnect(ServerSocket serverSocket) throws IOException {

        Socket socket = serverSocket.accept();
        System.out.println("接続受付中");

        try {
            //request
            HttpRequest httpRequest = new HttpRequest();
            InputStream inputStream = socket.getInputStream();

            //response
            HttpResponse httpResponse = new HttpResponse();
            OutputStream outputStream = socket.getOutputStream();

        }

        catch (IOException e) {
            System.out.println("正常にコネクションできないエラーが発生しました");
        }
        finally {
            try {
                socket.close();
                serverSocket.close();
            } catch (IOException e) {
                System.out.println("ソケットを閉じれないエラーが発生しました");
            }

        }
    }
}

