package jp.co.topgate.sugawara.web;

import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.io.InputStreamReader;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class HttpServer {

    private static final int PORT = 8081;// Httpサーバでは一般的にポート番号として80番もしくは8080番を使用する
    private ServerSocket serverSocket = null;
    private Socket socket = null;
    private BufferedReader br;

    public BufferedReader getReqdata() {
        return this.br;
    }


    public void connection() throws IOException {
        System.out.println("start up http server http://localhost:" + this.PORT);
        try (ServerSocket serverSocket = new ServerSocket(this.PORT)) {

            System.out.println("try start up http server http://localhost:" + this.PORT);
            while (true) {

                this.socket = serverSocket.accept();
                System.out.println("request incoming");

                /*
                クライアントとの入出力の時点ではバイト列として扱い、内部処理ではStringに変換して操作する
                 */
                // Request
                /*
                InputStream is = this.socket.getInputStream();// データを読み込んで
                BufferedInputStream bis = new BufferedInputStream(is);// データをバッファリングしながらバイト列でもってきて
                BufferedReader br = new BufferedReader(new InputStreamReader(bis));// バイト列をStringに変換
                System.out.println(br);// Stringに変換されたリクエストデータを出力
                */
                /*


                br = new BufferedReader(new InputStreamReader(
                        socket.getInputStream()));
                String str;
                while (!(str = br.readLine()).equals("")) {
                    System.out.println(str);
                }
                */
                /*

                BufferedReader br = new BufferedReader(new InputStreamReader(InputStream is, "UTF-8"));
                String str = br.readLine();
                */

                InputStream is = this.socket.getInputStream();
                BufferedInputStream bis = new BufferedInputStream(is);
                BufferedReader br = new BufferedReader(new InputStreamReader(bis));
                String request = br.readLine();
                while (!(request = br.readLine()).equals("")) {
                    System.out.println(request);
                }


                /*
                InputStreamReader isr = this.socket.getInputStream();
                BufferedReader br = new BufferedInputStream(isr);
                String str;
                while (!(str = br.readLine()).equals("")) {
                    System.out.println(str);
                }
                */



                // Response
                OutputStream outputStream = this.socket.getOutputStream();
                HttpResponse httpResponse = new HttpResponse();// HttpResponse.javaからメソッドを呼び出し
                System.out.println("yagi");// Stringのレスポンスデータを出力
                //　// Stringをバイト列に変換するコード
                //BufferedOutputStream bos = new BufferedOutputStream();  // データをバッファリングしながらバイト列でもっていって
                //OutputStream os = this.socket.getOutputStream(bos);  // データを出力

            }
        } catch (IOException e) {
            System.out.println("正常にコネクションできないエラーが発生しました");
        } finally {
            this.socket.close();
            serverSocket.close();

        }
    }

}




